/* CYBERPUNK QUIZ APP CSS */
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@500&family=Rajdhani:wght@500&display=swap');

:root {
  --neon-cyan: #00f3ff;
  --neon-pink: #ff00ff;
  --matrix-green: #00ff00;
  --cyber-dark: #0a0a16;
}

body {
  margin: 0;
  background: var(--cyber-dark);
  min-height: 100vh;
  font-family: 'Rajdhani', sans-serif;
}

.particles {
  position: fixed;
  width: 100%;
  height: 100%;
  z-index: 1;
}

.neon-border {
  position: relative;
  border: 2px solid var(--neon-cyan);
  box-shadow: 0 0 15px var(--neon-cyan),
              inset 0 0 15px var(--neon-cyan);
  animation: border-pulse 2s infinite;
}

.cyberpunk-container {
  position: relative;
  padding: 2rem;
  z-index: 2;
  max-width: 800px;
  margin: 0 auto;
}

/* Question Styles */
.cyber-question {
  background: rgba(10, 10, 22, 0.9);
  padding: 2rem;
  backdrop-filter: blur(10px);
}

.header-display {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 2rem;
}

.question-counter {
  font-family: 'Orbitron', sans-serif;
  font-size: 2.5rem;
  color: var(--neon-pink);
  text-shadow: 0 0 10px var(--neon-pink);
}

.progress-bar {
  flex-grow: 1;
  height: 8px;
  background: rgba(255, 255, 255, 0.1);
  position: relative;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--neon-cyan), var(--neon-pink));
  transition: width 0.5s ease;
}

.neon-text {
  font-family: 'Orbitron', sans-serif;
  color: var(--neon-cyan);
  text-shadow: 0 0 15px var(--neon-cyan);
  letter-spacing: 2px;
}

.neon-text-alt {
  color: var(--matrix-green);
  text-shadow: 0 0 15px var(--matrix-green);
  font-size: 1.5rem;
  margin: 2rem 0;
}

/* Cyber Options */
.cyber-options {
  display: grid;
  gap: 1.5rem;
  margin: 3rem 0;
}

.cyber-option {
  position: relative;
  padding: 1.5rem;
  background: rgba(0, 243, 255, 0.05);
  border: 1px solid rgba(0, 243, 255, 0.3);
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  gap: 1rem;
}

.cyber-option:hover {
  background: rgba(0, 243, 255, 0.15);
  transform: translateX(10px);
}

.active-glitch {
  background: rgba(0, 255, 0, 0.1);
  border-color: var(--matrix-green);
  animation: glitch 0.5s infinite;
}

.option-code {
  font-family: 'Orbitron', sans-serif;
  color: var(--neon-pink);
}

.option-text {
  color: #fff;
  flex-grow: 1;
}

/* Cyber Buttons */
.cyber-button {
  background: transparent;
  border: 2px solid var(--neon-cyan);
  color: var(--neon-cyan);
  padding: 1rem 2rem;
  font-family: 'Orbitron', sans-serif;
  letter-spacing: 2px;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  transition: all 0.3s ease;
}

.cyber-button:hover:not(:disabled) {
  background: var(--neon-cyan);
  color: var(--cyber-dark);
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

.button-hack-effect {
  position: relative;
  z-index: 2;
}

/* Summary Screen */
.cyber-summary {
  background: rgba(10, 10, 22, 0.95);
  padding: 3rem;
  text-align: center;
  backdrop-filter: blur(20px);
}

.score-display {
  font-size: 4rem;
  margin: 2rem 0;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  font-family: 'Orbitron', sans-serif;
}

.glowing-text {
  color: var(--neon-cyan);
  text-shadow: 0 0 20px var(--neon-cyan);
}

.divider {
  color: var(--neon-pink);
}

/* Animations */
@keyframes border-pulse {
  0% { opacity: 0.8; }
  50% { opacity: 0.4; }
  100% { opacity: 0.8; }
}

@keyframes glitch {
  0% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
  100% { transform: translate(0); }
}

@keyframes scanline {
  from { background-position: 0 0; }
  to { background-position: 0 100%; }
}

/* Add scanline effect */
.cyber-question::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 50%,
    rgba(0, 243, 255, 0.05) 51%,
    transparent 51%
  );
  background-size: 100% 4px;
  animation: scanline 2s linear infinite;
  pointer-events: none;
}